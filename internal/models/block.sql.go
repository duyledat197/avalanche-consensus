// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: block.sql

package models

import (
	"context"

	"github.com/lib/pq"
)

const getLatestBlock = `-- name: GetLatestBlock :many
SELECT
  id, data, created_at, updated_at, deleted_at
FROM
  blocks
ORDER BY
  created_at
LIMIT
  $1
`

func (q *Queries) GetLatestBlock(ctx context.Context, limit int32) ([]*Block, error) {
	rows, err := q.db.QueryContext(ctx, getLatestBlock, limit)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []*Block
	for rows.Next() {
		var i Block
		if err := rows.Scan(
			&i.ID,
			pq.Array(&i.Data),
			&i.CreatedAt,
			&i.UpdatedAt,
			&i.DeletedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, &i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
